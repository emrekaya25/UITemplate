@using Newtonsoft.Json
@using UITemplate.Model.DTO.UserRole
@using UITemplate.UI.Areas.Admin.Models
@model UserViewModel

@inject IHttpContextAccessor Accessor

@{
    int count = 0;
}

@{
	ViewData["Title"] = "User";
	Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}



<div class="card">
    <div class="card-header">
        <h3 class="card-title">Kullanıcılar</h3>
        <div class="card-tools col-2">
            <button type="button" class="btn btn-block btn-success" data-toggle="modal" data-target="#modal-NewUser">Ekle</button>
        </div>
    </div>
    <div class="card-body">
        <!-- table start -->
        <div class="row mb-2">
            <div class="col-4">
                <select class="form-control" id="items-per-page">
                    <option value="5">Her sayfada 5 kullanıcı göster.</option>
                    <option selected value="10">Her sayfada 10 kullanıcı göster.</option>
                    <option value="25">Her sayfada 25 kullanıcı göster.</option>
                    <option value="50">Her sayfada 50 kullanıcı göster.</option>
                </select>
            </div>
            <div class="col-8"> <input type="text" id="my-table-search-input" class="form-control" placeholder="Ara..." autocomplete="off" /></div>
        </div>
        <table id="my-table" class="table  table-striped table-borderless shadow">

            <tbody>

                <div class="card card-solid">
                    <div class="card-body pb-0">
                        <div id="userRows" class="row">
                            @foreach (var user in Model.Users)
                            {
                                count++;

                                <div class="userDiv col-12 col-sm-6 col-md-4 d-flex align-items-stretch flex-column" username="@user.Name @user.LastName">
                                    <div class="card bg-light d-flex flex-fill">
                                        <div class="card-header text-muted border-bottom-0">
                                           
                                        </div>
                                        <div class="card-body pt-0">
                                            <div class="row">
                                                <div class="col-7">
                                                    <h2 class="lead">@user.Name @user.LastName</h2>
                                                    <p class="text-muted text-sm"><b>Rol/Roller: @string.Join(", ", user.UserRoles.Select(x => x.RoleName))  </b> </p>
                                                    <ul class="ml-4 mb-0 fa-ul text-muted">
                                                        <li class="small"><span class="fa-li"><i class="fas fa-lg fa-message"></i></span> Email: @user.Email</li>
                                                    </ul>
                                                </div>
                                                <div class="col-5 text-center">
                                                    <img src="data:image/jpeg;base64,@user.Image" alt="@user.Name-avatar" class="img-circle img-fluid">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="card-footer text-right">
                                            <div class="d-inline-block">
                                                @using (Html.BeginForm("GetUser","User",FormMethod.Get, new {id = "getUserForm", enctype = "multipart/form-data" }))
                                                {
                                                    <button type="submit" class="btn btn-sm btn-primary">
                                                        <i class="fas fa-user"></i> İncele
                                                        <input hidden="hidden" name="userGuid" value="@user.Guid" />
                                                    </button>
                                                }
                                            </div>
                                            <div class="d-inline-block">
                                                @using (Html.BeginForm("DeleteUser", "User", FormMethod.Post, new { id = "deleteUserForm", enctype = "multipart/form-data" }))
                                                {
                                                    <button type="submit" class="btn btn-sm btn-danger">
                                                        <i class="fas fa-trash"></i> Sil
                                                        <input hidden="hidden" name="Id" value="@user.Id" />
                                                    </button>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                
            </tbody>

            <tfoot>
                <tr>
                    <td class="text-start border-0" colspan="2">Toplam <span id="total-entity" class="badge bg-primary custom-fs-14">@count</span> Kullanıcı</td>
                    <td class="text-end border-0" colspan="6">
                        <nav class="d-flex justify-content-end">
                            <ul class="pagination fw-bold">
                                <li class="page-item">
                                    <button id="first-page" class="page-link text-black">
                                        <span aria-hidden="true">&laquo;</span>
                                    </button>
                                </li>
                                <li>
                                    <button id="prev-page" class="page-link text-black">
                                        <span aria-hidden="true">&lsaquo;</span>
                                    </button>
                                </li>
                                <li class="page-item active"><button class="page-link page-number text-white fw-bold">1</button></li>
                                <li>
                                    <button id="next-page" class="page-link text-black">
                                        <span aria-hidden="true">&rsaquo;</span>
                                    </button>
                                </li>
                                <li class="page-item">
                                    <button id="last-page" class="page-link text-black">
                                        <span aria-hidden="true">&raquo;</span>
                                    </button>
                                </li>
                            </ul>
                        </nav>
                    </td>
                </tr>
            </tfoot>
            <!-- tfoot end -->
        </table>
        <!-- table end -->
    </div>


</div>


<div class="modal fade" id="modal-NewUser">
    <div class="modal-dialog modal-NewUser">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Yeni Kişi</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @{


                using (Html.BeginForm("AddUser", "User", FormMethod.Post, new { id = "addUserForm", enctype = "multipart/form-data" }))
                {
                    <div class="modal-body">


                        <div class="form-group">
                            <label for="txtUserName_Add">Ad</label>
                            <input name="Name" type="text" class="form-control" id="txtUserName_Add">
                        </div>

                        <div class="form-group">
                            <label for="txtUserLastName_Add">Soyad</label>
                            <input name="LastName" type="text" class="form-control" id="txtUserLastName_Add">
                        </div>

                        <div class="form-group">
                            <label for="txtUserEmail_Add">Email</label>
                            <input name="Email" type="email" class="form-control" id="txtUserEmail_Add">
                        </div>

                        <div class="form-group">
                            <label for="txtUserPassword_Add">Sifre</label>
                            <input name="Password" type="password" class="form-control" id="txtUserPassword_Add">
                        </div>

                        <div class="form-group">
                            <label for="txtUserImage_Add">Fotoğraf</label>
                            <input name="Image" style=" height: 43px;" type="file" class="form-control" rows="5" id="txtUserImage_Add" />
                        </div>

                        <div class="form-group">
                            <label for="txtUserRoles_Add">Roller</label>
                            <div id="txtUserRoles_Add" class="row">
                                @foreach (var role in Model.Roles)
                                {
                                    <div class="col-md-4 col-sm-6">
                                        <div class="role-checkbox" style="border: 1px solid #ccc; border-radius: 5px; background-color: #f9f9f9; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); transition: background-color 0.3s ease; padding: 5px; margin-bottom: 10px;">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" name="UserRoles[]" value="@role.Id" id="role_@role.Id" style="cursor: pointer;" onchange="this.parentElement.parentElement.style.backgroundColor = this.checked ? '#e0f7ff' : '#f9f9f9';">
                                                <label class="form-check-label" for="role_@role.Id" style="margin-left: 10px;">
                                                    @role.Name
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer justify-content-between">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Kapat</button>
                        <button type="submit" class="btn btn-primary" id="btnAddUser">Kaydet</button>
                    </div>
                }



            }
        </div>

        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>


<!-- Error,Success Messages -->

@functions {
    string DecodeHtmlCharacters(string htmlEncodedString)
    {
        return System.Net.WebUtility.HtmlDecode(htmlEncodedString);
    }
}
@if (TempData["userResponseSuccess"] != null)
{
    var x = TempData["userResponseSuccess"].ToString();
    <script>
        Swal.fire({
            title: "Başarılı!",
            html: "@Html.Raw(DecodeHtmlCharacters(x.Replace("-", "</br>")))",
            icon: "success"
        });
    </script>
}
@if (TempData["userResponseError"] != null)
{
    var x = TempData["userResponseError"].ToString();
    <script>
        Swal.fire({
            title: "Hata!",
            html: "@Html.Raw(DecodeHtmlCharacters(x.Replace("-", "</br>")))",
            icon: "error"
        });
    </script>
}

<!-- Error,Success Messages -->


<script>
    $(document).ready(function () {
        var ascending = true;
        var itemsPerPage = 10;
        var currentPage = 1;
        var items = $(".userDiv"); //gelen verilerin tekrarlandığı div
        var totalItems = items.length;
        var totalPages = Math.ceil(totalItems / itemsPerPage);
        var colSpanCount = $('#my-table tbody tr:first td').length;
        var notFoundMessage = `<tr id="not-found" class="border-bottom"><td class="text-danger text-center fs-5" colspan="${colSpanCount}">Üzgünüz, aradığınız veri bulunamadı.</td></tr>`;
        showPage(1);

        $("#prev-page").click(function () {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
            if (currentPage > 1) {
                currentPage--;
                showPage(currentPage);
            }
        });

        $("#first-page").click(function () {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
            currentPage = 1;
            showPage(currentPage);
        });

        $("#next-page").click(function () {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
            if (currentPage < totalPages) {
                currentPage++;
                showPage(currentPage);
            }
        });

        $("#last-page").click(function () {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
            currentPage = totalPages;
            showPage(currentPage);
        });

        $('#my-table-search-input').keyup(function () {
            $('#not-found').remove();
            var searchText = $(this).val().toLowerCase();
            var visibleRows = $('.userDiv').filter(function () {     // neye göre filtreleyeceksem onu alıyorum userDiv id'sindeki username etiketinin içindeki veriyi alıyorum.
                var rowText = $(this).attr("username").toLowerCase();
                return rowText.indexOf(searchText) !== -1;
            });
            $('.userDiv').removeClass("d-flex").addClass("d-none"); // gizlemeyi ekliyoruz.
            if (visibleRows.length > 0) {
                visibleRows.addClass("d-flex").removeClass("d-none"); //gizlemeyi kaldırıyoruz.
                $('#total-entity').text(visibleRows.length);
            } else {
                $('#total-entity').text(0);
                $('#userRows').append(notFoundMessage);
            }
            items = visibleRows;
            totalItems = items.length;
            totalPages = Math.ceil(totalItems / itemsPerPage);
            if (totalPages == 0) {
                totalPages = 1
            }
            showPage(1);
            updateButtons();
        });

        $('#items-per-page').on('change', function () {
            var selectedValue = $(this).val();
            itemsPerPage = selectedValue;
            totalPages = Math.ceil(totalItems / itemsPerPage);
            if (totalPages == 0) {
                totalPages = 1
            }
            showPage(1);
            updateButtons();
        });

        function showPage(page) {
            $(".page-number").text(currentPage + "/" + totalPages);
            items.hide();
            items.slice((page - 1) * itemsPerPage, page * itemsPerPage).show();
            updateButtons();
        }

        function updateButtons() {
            $("#first-page").toggle(currentPage > 1);
            $("#prev-page").toggle(currentPage > 1);
            $("#next-page").toggle(currentPage < totalPages);
            $("#last-page").toggle(currentPage < totalPages);
        }


    });
</script>
