@using Newtonsoft.Json
@using UITemplate.Model.DTO.UserRole
@using UITemplate.UI.Areas.Admin.Models
@model RoleViewModel
@inject IHttpContextAccessor Accessor
@{
	var sessionRoles = JsonConvert.DeserializeObject<List<UserRoleDTO>>(Accessor.HttpContext.Session.GetString("Roles"));
	var roleNames = string.Join(",", sessionRoles.Select(x => x.RoleName));
}

@{
	ViewData["Title"] = "Index";
	Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="card">
	<div class="card-header">
		<h3 class="card-title">Roller</h3>
		<div class="card-tools col-2">
			<button type="button" class="btn btn-block btn-success" data-toggle="modal" data-target="#modal-NewRole">Ekle</button>
		</div>
	</div>
	<div class="card-body">
		<!-- table start -->
		<div class="row mb-2">
			<div class="col-4">
				<select class="form-control" id="items-per-page">
					<option value="5">Her sayfada 5 rol göster.</option>
					<option selected value="10">Her sayfada 10 rol göster.</option>
					<option value="25">Her sayfada 25 rol göster.</option>
					<option value="50">Her sayfada 50 rol göster.</option>
				</select>
			</div>
			<div class="col-8"> <input type="text" id="my-table-search-input" class="form-control" placeholder="Ara..." autocomplete="off" /></div>
		</div>
		<table id="my-table" class="table  table-striped table-borderless shadow">
			<!-- thead start -->
			<thead>
				<tr class="text-center fs-6 border-bottom">
					<th style="text-align:start;">#</th>
					<th style="text-align:start;">Rol</th>
					<th style="text-align:start;">Güncelle</th>
					<th style="text-align:start;">Sil</th>
				</tr>
			</thead>
			<!-- thead end -->
			<!-- tbody start -->
			<tbody>
				@{
					int count = 0;
				}
				@foreach (var item in Model.Roles)
				{
					count++;
					<tr class="border-bottom">
						<td class="align-content-center">@item.Id</td>
						<td class="align-content-center">@item.Name</td>
						<td class="align-content-center">
							@{
								if (!(roleNames.Contains("Admin")))
								{
									<button id="btnUpdateRole"
											onclick='openRoleDetailModal("@item.Id","@item.Name")' class="btn bg-gradient-cyan" disabled>
										Güncelle
									</button>
								}
								else
								{
									<button id="btnUpdateRole"
											onclick='openRoleDetailModal("@item.Id","@item.Name")' class="btn bg-gradient-cyan">
										Güncelle
									</button>
								}
							}

						</td>
						@using (Html.BeginForm("DeleteRole", "Role", FormMethod.Post, new { id = "deleteRoleForm" }))
						{
							if (item.Id <= 2 || !(roleNames.Contains("Admin")))
							{
								<td class="align-content-center"><input name="Id" hidden="hidden" value="@item.Id" /><button id="btnDeleteRole" type="submit" class="btn btn-danger" disabled>Sil</button></td>
							}
							else
							{
								<td class="align-content-center"><input name="Id" hidden="hidden" value="@item.Id" /><button id="btnDeleteRole" type="submit" class="btn btn-danger">Sil</button></td>
							}

						}

					</tr>

				}
			</tbody>
			<!-- tbody end -->
			<!-- tfoot start -->
			<tfoot>
				<tr>
					<td class="text-start border-0" colspan="2">Toplam <span id="total-entity" class="badge bg-primary custom-fs-14">@count</span> Rol</td>
					<td class="text-end border-0" colspan="4">
						<nav class="d-flex justify-content-end">
							<ul class="pagination fw-bold">
								<li class="page-item">
									<button id="first-page" class="page-link text-black">
										<span aria-hidden="true">&laquo;</span>
									</button>
								</li>
								<li>
									<button id="prev-page" class="page-link text-black">
										<span aria-hidden="true">&lsaquo;</span>
									</button>
								</li>
								<li class="page-item active"><button class="page-link page-number text-white fw-bold">1</button></li>
								<li>
									<button id="next-page" class="page-link text-black">
										<span aria-hidden="true">&rsaquo;</span>
									</button>
								</li>
								<li class="page-item">
									<button id="last-page" class="page-link text-black">
										<span aria-hidden="true">&raquo;</span>
									</button>
								</li>
							</ul>
						</nav>
					</td>
				</tr>
			</tfoot>
			<!-- tfoot end -->
		</table>
		<!-- table end -->
	</div>


</div>
<div class="modal fade" id="modal-NewRole">
	<div class="modal-dialog modal-NewRole">
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title">Yeni Rol</h4>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			@{


				using (Html.BeginForm("AddRole", "Role", FormMethod.Post, new { id = "addRoleForm", enctype = "multipart/form-data" }))
				{
					<div class="modal-body">


						<div class="form-group">
							<label for="txtRoleName_Add">Durum Adı</label>
							<input name="Name" type="text" class="form-control" id="txtRoleName_Add">
							@*<div class="invalid-feedback">Ad alanı boş bırakılamaz.</div>*@
						</div>

					</div>
					<div class="modal-footer justify-content-between">
						<button type="button" class="btn btn-default" data-dismiss="modal">Kapat</button>
						<button type="submit" class="btn btn-primary" id="btnAddRole">Kaydet</button>
					</div>
				}



			}
		</div>

		<!-- /.modal-content -->
	</div>
	<!-- /.modal-dialog -->
</div>
<div class="modal fade" id="modal-RoleDetail">
	<div class="modal-dialog modal-RoleDetail">
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title">Rol Güncelle</h4>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			@{


				using (Html.BeginForm("UpdateRole", "Role", FormMethod.Post, new { id = "btnUpdateRole", enctype = "multipart/form-data" }))
				{
					<div class="modal-body">

						<input name="Id" hidden="hidden" type="text" class="form-control" id="txtRoleId_Update">
						<div class="form-group">
							<label for="txtRoleName_Update">Durum Adı</label>
							<input name="Name" type="text" class="form-control" id="txtRoleName_Update">
						</div>

					</div>
					<div class="modal-footer justify-content-between">
						<button type="button" class="btn btn-default" data-dismiss="modal">Kapat</button>
						<button type="submit" class="btn btn-primary" id="btnUpdateRole">Güncelle</button>
					</div>
				}
			}
		</div>
		<!-- /.modal-content -->
	</div>
	<!-- /.modal-dialog -->
</div>

@functions {
	string DecodeHtmlCharacters(string htmlEncodedString)
	{
		return System.Net.WebUtility.HtmlDecode(htmlEncodedString);
	}
}
@if (TempData["roleResponseSuccess"] != null)
{
	var x = TempData["roleResponseSuccess"].ToString();
	<script>
		Swal.fire({
			title: "Başarılı!",
			html: "@Html.Raw(DecodeHtmlCharacters(x.Replace("-", "</br>")))",
			icon: "success"
		});
	</script>
}
@if (TempData["roleResponseError"] != null)
{
	var x = TempData["roleResponseError"].ToString();
	<script>
		Swal.fire({
			title: "Hata!",
			html: "@Html.Raw(DecodeHtmlCharacters(x.Replace("-", "</br>")))",
			icon: "error"
		});
	</script>
}

<script>
	function openRoleDetailModal(id, name) {
		$("#modal-RoleDetail").modal("show");
		$("#txtRoleId_Update").val(id);
		$("#txtRoleName_Update").val(name);
	}
	$(document).ready(function () {
		var ascending = true;
		var itemsPerPage = 10;
		var currentPage = 1;
		var items = $("#my-table tbody tr");
		var totalItems = items.length;
		var totalPages = Math.ceil(totalItems / itemsPerPage);
		var colSpanCount = $('#my-table tbody tr:first td').length;
		var notFoundMessage = `<tr id="not-found" class="border-bottom"><td class="text-danger text-center fs-5" colspan="${colSpanCount}">Üzgünüz, aradığınız veri bulunamadı.</td></tr>`;
		showPage(1);

		$("#prev-page").click(function () {
			window.scrollTo({
				top: 0,
				behavior: 'smooth'
			});
			if (currentPage > 1) {
				currentPage--;
				showPage(currentPage);
			}
		});

		$("#first-page").click(function () {
			window.scrollTo({
				top: 0,
				behavior: 'smooth'
			});
			currentPage = 1;
			showPage(currentPage);
		});

		$("#next-page").click(function () {
			window.scrollTo({
				top: 0,
				behavior: 'smooth'
			});
			if (currentPage < totalPages) {
				currentPage++;
				showPage(currentPage);
			}
		});

		$("#last-page").click(function () {
			window.scrollTo({
				top: 0,
				behavior: 'smooth'
			});
			currentPage = totalPages;
			showPage(currentPage);
		});

		$('#my-table-search-input').keyup(function () {
			$('#not-found').remove();
			var searchText = $(this).val().toLowerCase();
			var visibleRows = $('#my-table tbody tr').filter(function () {
				var rowText = $(this).text().toLowerCase();
				return rowText.indexOf(searchText) !== -1;
			});
			$('#my-table tbody tr').hide();
			if (visibleRows.length > 0) {
				visibleRows.show();
				console.log(visibleRows.length);
				$('#total-entity').text(visibleRows.length);
			} else {
				$('#total-entity').text(0);
				$('#my-table tbody').append(notFoundMessage);
			}
			items = visibleRows;
			totalItems = items.length;
			totalPages = Math.ceil(totalItems / itemsPerPage);
			if (totalPages == 0) {
				totalPages = 1
			}
			showPage(1);
			updateButtons();
		});

		$('#items-per-page').on('change', function () {
			var selectedValue = $(this).val();
			itemsPerPage = selectedValue;
			totalPages = Math.ceil(totalItems / itemsPerPage);
			if (totalPages == 0) {
				totalPages = 1
			}
			showPage(1);
			updateButtons();
		});

		function showPage(page) {
			$(".page-number").text(currentPage + "/" + totalPages);
			items.hide();
			items.slice((page - 1) * itemsPerPage, page * itemsPerPage).show();
			updateButtons();
		}

		function updateButtons() {
			$("#first-page").toggle(currentPage > 1);
			$("#prev-page").toggle(currentPage > 1);
			$("#next-page").toggle(currentPage < totalPages);
			$("#last-page").toggle(currentPage < totalPages);
		}
	});
</script>

